{"version":3,"file":"static/js/732.fbd4c293.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js","components/Contact/Contact.styled.js","components/Modal/Modal.styled.js","components/CreaterContacts/CreaterContacts.styled.js","components/CreaterContacts/CreaterContacts.js","components/Modal/Modal.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","hooks/useVisibleContacts.js","components/Filter/Filter.js","components/Contacts/Contacts.js","pages/Phonebook/Phonebook.styled.js","pages/Phonebook/Phonebook.js"],"sourcesContent":["export const selectContacts = state => state.contacts;","export const selectFilter = state => state.filters;\n","import styled from 'styled-components';\n\nexport const DeleteContact = styled.button`\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.round};\n  background-color: ${p => p.theme.colors.primary};\n  color: ${p => p.theme.colors.white};\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n  `","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`\n\nexport const Modal = styled.div`\n  padding: ${p => p.theme.space[3]}px;\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.lg};\n`","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n    padding:${ p => p.theme.space[3]}px;\n    display: inline-flex;\n    flex-direction: column;\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.black};\n    margin-top: ${ p => p.theme.space[3]}px;\n`\n\nexport const FormButton = styled.button`\n  margin-top: ${p => p.theme.space[3]}px;\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.md};\n  background-color: ${p => p.theme.colors.primary};\n  color: ${p => p.theme.colors.white};\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`","import { Box } from 'components/Box';\nimport { Formik, Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport { StyledForm, FormButton } from './CreaterContacts.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\n\n\nexport const CreaterContacts = ({ title, INITIAL_VALUES, subbmitForm}) => {\n    const {  isLoading } = useSelector(selectContacts);\n    \n    \n\n    const hendleSubbmitForm =  (value ,{ resetForm })=> {\n        subbmitForm(value)\n        resetForm()\n    }\n    return (\n        <Box px={4}>\n            <h2>{title}</h2>\n\n            <Formik initialValues={INITIAL_VALUES}\n                onSubmit={hendleSubbmitForm}>\n                <StyledForm autoComplete='off'>\n                    <Box display=\"inline-flex\"\n                        flexDirection=\"column\"\n                        gridGap={3} pb={3}>\n                        <label htmlFor=\"name\">Name</label>\n                        <Field\n                            placeholder=\"Enter name\"\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required />\n                    </Box>\n\n                    <Box display=\"inline-flex\"\n                        flexDirection=\"column\"\n                        gridGap={3} pb={3}>\n                        <label htmlFor=\"number\">Number</label>\n                        <Field\n                            placeholder=\"Enter number\"\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                        />\n                    </Box>\n                            \n                    <FormButton type=\"submit\" disabled={isLoading}>\n                        {title}\n                    </FormButton>\n                    \n                </StyledForm>\n            </Formik>\n        </Box>\n    )   \n}\n\nCreaterContacts.propTypes = {\n    title: PropTypes.string.isRequired,\n    subbmitForm: PropTypes.func.isRequired\n}","import * as SC from './Modal.styled'\nimport { createPortal } from 'react-dom'\nimport { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { CreaterContacts } from 'components/CreaterContacts/CreaterContacts'\nimport { editContact } from 'redux/contacts/contactsOperation'\nimport { useDispatch } from 'react-redux'\n\nconst modalRoot = document.querySelector('#modal-root')\n\nexport const Modal = ({ contact, modalChanger }) => {\n    const dispatch = useDispatch()\n\n    const {id, name, number} = contact\n\n    const INITIAL_VALUES = {name, number} \n\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === \"Escape\") modalChanger()\n        }\n        window.addEventListener(\"keydown\", handleKeyDown)\n    \n        return () => {\n            window.removeEventListener(\"keydown\", handleKeyDown)\n        }\n    }, [modalChanger])\n\n    const closeModal = (e) => {\n        if (e.target === e.currentTarget) modalChanger()\n    }\n\n    const handleEditContact = (value) => {\n        dispatch(editContact({value , id}))\n        modalChanger()\n        alert(`${value.name} was corrected`)\n    }\n\n    return createPortal(\n        <SC.Overlay onClick={(e) => closeModal(e)}>\n            <SC.Modal>\n                <CreaterContacts title=\"Edit contact\"\n                    INITIAL_VALUES={INITIAL_VALUES}\n                    subbmitForm={handleEditContact}\n                />\n            </SC.Modal>\n        </SC.Overlay>,\n        modalRoot\n    )\n}\n\nModal.propTypes = {\n    modalChanger: PropTypes.func.isRequired,\n    contact: PropTypes.exact({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id:PropTypes.string.isRequired,\n   })\n}","import { Box } from \"components/Box\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/contactsOperation\"\nimport { DeleteContact } from \"./Contact.styled\";\nimport { RiDeleteBack2Line } from 'react-icons/ri';\nimport {  FiEdit} from 'react-icons/fi';\nimport { selectContacts } from \"redux/contacts/contactsSelectors\";\nimport { useState } from \"react\";\nimport { Modal } from \"components/Modal/Modal\";\nimport PropTypes from 'prop-types'\n\n\nexport const Contact = ({ contact }) => {\n    const dispatch = useDispatch();\n    const { isLoading } = useSelector(selectContacts)\n    const [showModal, setShowModal] = useState(false)\n    \n    const { id, name, number } = contact\n\n    const modalChanger = () => setShowModal(showModal => !showModal)\n\n    return (\n        <Box display=\"flex\" mb={3} p={2} width=\"250px\" borderRadius=\"16px\"\n            justifyContent=\"space-between\" border=\"1px dashed black\"\n            key={id}><div>{name}: {number}</div>\n            <div>\n                <DeleteContact onClick={modalChanger} disabled={isLoading}><FiEdit size={15} /></DeleteContact>\n                <DeleteContact onClick={() => dispatch(deleteContact(id))} disabled={isLoading}><RiDeleteBack2Line size={15} /></DeleteContact>\n            </div>\n            {showModal &&\n                <Modal modalChanger={modalChanger} contact={contact}/>\n            }\n        </Box>\n    )\n}\n\nContact.propTypes = {\n    contact: PropTypes.exact({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id:PropTypes.string.isRequired,\n   })\n}","import { Box } from 'components/Box';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport { useEffect } from 'react';\nimport { useVisibleContacts } from 'hooks/useVisibleContacts';\nimport { Contact } from 'components/Contact/Contact';\n\nexport const ContactsList = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    \n    const contacts = useVisibleContacts()\n\n    return (\n        <Box as=\"ul\" mt={4}>\n            {contacts.map(contact => (\n                <li key={contact.id}>\n                    <Contact contact={contact}/>\n                </li>\n            ))}\n        </Box>\n    )\n}","import { useSelector } from \"react-redux\"\nimport { selectContacts } from \"redux/contacts/contactsSelectors\"\nimport { selectFilter } from \"redux/filter/filterSelectors\"\n\nexport const useVisibleContacts = () => { \n    const {contacts} = useSelector(selectContacts)\n    const filter = useSelector(selectFilter)\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n}","import { Box } from \"components/Box\"\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/filter/filterSlice\"\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <Box display=\"inline-flex\"\n            flexDirection=\"column\"\n            gridGap={3} p={3} mt={3}\n            border=\"1px solid black\">\n            <label htmlFor='filter'>Find contacts by name</label>\n            <input type=\"text\" name=\"filter\" onChange={(e) => dispatch(setFilter(e.target.value))}></input>\n        </Box>\n    )\n}","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\n\nexport const Contacts = ({ title }) => {\n    \n\n\n    return (\n        <Box px={4} borderLeft=\"1px dashed black\">\n            <h2>{title}</h2>\n            <Filter/>\n            <ContactsList/>\n        </Box>\n    )\n}\n\nContacts.propType = {\n    title: PropTypes.string.isRequired,\n}","import styled from 'styled-components';\n\n\nexport const Conteiner = styled.div`\nmin-height: calc(100vh - 50px);\ndisplay: flex;\ngap: ${p => p.theme.space[4]}\n`","import { Contacts } from \"components/Contacts/Contacts\";\nimport { CreaterContacts } from \"components/CreaterContacts/CreaterContacts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/contactsOperation\";\nimport { selectContacts } from \"redux/contacts/contactsSelectors\";\nimport {Conteiner} from \"./Phonebook.styled\"\n\nconst INITIAL_VALUES = { name: \"\", number: \"\" }\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(selectContacts);\n  \n  const handleAddContact =  (value )=> {\n        if (contacts.some(contact => contact.name === value.name)) {\n            alert(`${value.name} is alredy in contarts`)\n        } else {\n            dispatch(addContact(value))\n            alert(`${value.name} added to phonebook`)\n        }\n    }\n\n  return (\n    <Conteiner>\n      <CreaterContacts title=\"Add contact\"\n        INITIAL_VALUES={INITIAL_VALUES}\n        subbmitForm={handleAddContact}\n      />\n          <Contacts title=\"Contacts\"/>\n    </Conteiner>\n  );\n}"],"names":["selectContacts","state","contacts","selectFilter","filters","DeleteContact","styled","p","theme","borders","normal","radii","round","colors","primary","white","secondary","Overlay","Modal","space","lg","StyledForm","Form","black","FormButton","md","CreaterContacts","title","INITIAL_VALUES","subbmitForm","isLoading","useSelector","Box","px","initialValues","onSubmit","value","resetForm","autoComplete","display","flexDirection","gridGap","pb","htmlFor","placeholder","type","name","pattern","required","disabled","modalRoot","document","querySelector","contact","modalChanger","dispatch","useDispatch","id","number","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","closeModal","editContact","alert","Contact","useState","showModal","setShowModal","mb","width","borderRadius","justifyContent","border","size","deleteContact","ContactsList","fetchContacts","filter","toLowerCase","includes","useVisibleContacts","as","mt","map","Filter","onChange","setFilter","Contacts","borderLeft","propType","PropTypes","Conteiner","Phonebook","some","addContact"],"sourceRoot":""}